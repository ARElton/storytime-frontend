[{"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/index.js":"1","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/reportWebVitals.js":"2","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/App.js":"3","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Header.js":"4","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeList.js":"5","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeTile.js":"6","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Search.js":"7","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Categories.js":"8","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityList.js":"9","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityTile.js":"10","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Profile.js":"11","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ChildTile.js":"12","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeView.js":"13","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityView.js":"14","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ChildView.js":"15","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Login.js":"16","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/LogoutButton.js":"17","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Signup.js":"18"},{"size":554,"mtime":1612370994526,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1612364427087,"results":"21","hashOfConfig":"20"},{"size":6814,"mtime":1613689254905,"results":"22","hashOfConfig":"20"},{"size":1741,"mtime":1613581731412,"results":"23","hashOfConfig":"20"},{"size":606,"mtime":1613485740159,"results":"24","hashOfConfig":"20"},{"size":2706,"mtime":1613680463322,"results":"25","hashOfConfig":"20"},{"size":434,"mtime":1612477882539,"results":"26","hashOfConfig":"20"},{"size":499,"mtime":1612382255886,"results":"27","hashOfConfig":"20"},{"size":546,"mtime":1612471469216,"results":"28","hashOfConfig":"20"},{"size":2612,"mtime":1613682693394,"results":"29","hashOfConfig":"20"},{"size":2107,"mtime":1613672990429,"results":"30","hashOfConfig":"20"},{"size":618,"mtime":1612727507550,"results":"31","hashOfConfig":"20"},{"size":2444,"mtime":1613506866112,"results":"32","hashOfConfig":"20"},{"size":2840,"mtime":1613489730456,"results":"33","hashOfConfig":"20"},{"size":2553,"mtime":1613691217236,"results":"34","hashOfConfig":"20"},{"size":1919,"mtime":1613591568121,"results":"35","hashOfConfig":"20"},{"size":257,"mtime":1613485740154,"results":"36","hashOfConfig":"20"},{"size":2395,"mtime":1613671344898,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"o5jgl6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/index.js",[],["84","85"],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/reportWebVitals.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/App.js",["86"],"import React, { useEffect, useState } from \"react\";\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport StorytimeList from './StorytimeList'\nimport ActivityList from './ActivityList'\nimport Profile from \"./Profile\";\nimport StorytimeView from \"./StorytimeView\";\nimport ActivityView from \"./ActivityView\";\nimport ChildView from \"./ChildView\"\nimport Login from \"./Login\"\nimport Signup from \"./Signup\";\nimport Background from \"../img/background.jpg\"\nimport '../App.css';\n\n\nfunction App() {\n\n//--------------States--------------//\n\n// Initial States\nconst [storytimes, setStorytimes] = useState([])\nconst [activities, setActivities] = useState([])\nconst [childStorytimes, setChildStorytimes] = useState([])\nconst [childActivities, setChildActivities] = useState([])\nconst [children, setChildren] = useState([])\n\n// Filter States\nconst [currentStorytime, setCurrentStorytime] = useState(null)\nconst [currentActivity, setCurrentActivity] = useState(null)\nconst [query, setQuery] = useState(\"\")\n\n// Login States\nconst [currentUser, setCurrentUser] = useState(null)\nconst [currentChild, setCurrentChild] = useState(null)\n\n\n//------------Initial Fetches------------//\n\n// GET STORYTIMES\nuseEffect(() => {\n  fetch('http://localhost:3000/storytimes')\n  .then((r)=>r.json())\n  .then(allData => {\n    setStorytimes(allData)\n  })\n}, [])\n\n// GET ACTIVITIES\nuseEffect(() => {\n  fetch('http://localhost:3000/activities')\n  .then((r)=>r.json())\n  .then(allData => {\n    setActivities(allData)\n  })\n}, [])\n\n// GET CHILDSTORYTIMES\nuseEffect(() => {\n  fetch('http://localhost:3000/child_storytimes')\n  .then((r)=>r.json())\n  .then(allData => {\n    setChildStorytimes(allData)\n  })\n}, [])\n\n// GET CHILDACTIVITIES\nuseEffect(() => {\n  fetch('http://localhost:3000/child_activities')\n  .then((r)=>r.json())\n  .then(allData => {\n    setChildActivities(allData)\n  })\n}, [])\n\n// GET CHILDREN\nuseEffect(() => {\n  fetch('http://localhost:3000/children')\n  .then((r)=>r.json())\n  .then(allData => {\n    setChildren(allData)\n  })\n}, [])\n\n//--------------Search--------------//\n\nconst displayedStorytimes = storytimes \n  .filter((storytime) => {\n    return storytime.title.toLowerCase().includes(query.toLowerCase())\n  })\n\nconst displayedActivities = activities \n  .filter((activity) => {\n    return activity.title.toLowerCase().includes(query.toLowerCase())\n  })\n\n//--------------RenderOnDOM--------------//\n\nfunction updateChildStorytime(childStorytimeObj) {\n  setChildStorytimes([...childStorytimes, childStorytimeObj])\n}\n\nfunction updateChildActivity(childActivityObj) {\n  setChildActivities([...childActivities, childActivityObj])\n}\n\nfunction updateChildren(childObj) {\n  setChildren([...children, childObj])\n}\n\nfunction handleRemovChildStorytime(id) {\n  const newChildStorytimes = childStorytimes.filter((childStorytime) => childStorytime.id !== id)\n  setChildStorytimes(newChildStorytimes)\n}\n\nfunction handleRemoveChildActivity(id) {\n  const newChildActivities = childActivities.filter((childActivity) => childActivity.id !== id)\n  setChildActivities(newChildActivities)\n}\n\nfunction handleEditedCAComment(editedCAComment) {\n  const updatedCAList = childActivities.map((childActivity) => {\n    if (childActivity.id === editedCAComment.id) {\n      return editedCAComment\n    } else {\n      return childActivity\n    }\n    })\n  setChildActivities(updatedCAList)\n}\n\nfunction handleEditedCSComment(editedCSComment) {\n  const updatedCSList = childStorytimes.map((childStorytime) => {\n    if (childStorytime.id === editedCSComment.id) {\n      return editedCSComment\n    } else {\n      return childStorytime\n    }\n    })\n  setChildStorytimes(updatedCSList)\n}\n\n//--------------Autologin--------------//\n\nuseEffect(() => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    fetch(\"http://localhost:3000/profile\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n      .then((r) => r.json())\n      .then((user) => {\n        setCurrentUser(user);\n      })\n  }\n}, [])\n\n//--------------Return--------------//\n\n  return (\n    <div className=\"big-container\"\n      style = {{backgroundImage: \"url(../img/background.jpg)\"}}>\n      <Header \n        query = {query} \n        setQuery = {setQuery} \n        setCurrentUser = {setCurrentUser}\n        currentUser = {currentUser}\n      />\n      <Switch>\n        <Route exact path='/storytimes'>\n          <StorytimeList \n            storytimes = {displayedStorytimes}\n            setCurrentStorytime = {setCurrentStorytime}\n            currentUser = {currentUser}\n            \n          />\n        </Route>\n        <Route exact path='/activities'>\n          <ActivityList \n            activities = {displayedActivities}\n            setCurrentActivity = {setCurrentActivity}\n          />\n        </Route>\n        <Route exact path='/profile'>\n          { currentUser ? (\n          <Profile \n            currentUser = {currentUser}\n            setCurrentChild = {setCurrentChild}\n            updateChildren = {updateChildren}\n            children = {children}\n            childStorytimes = {childStorytimes}\n            childActivities = {childActivities}\n          />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route path='/storytimes/:id'>\n          <StorytimeView \n            storytime = {currentStorytime}\n            currentUser = {currentUser}\n            updateChildStorytime = {updateChildStorytime}\n            children = {children}\n            setCurrentActivity = {setCurrentActivity}\n          />\n        </Route>\n        <Route path='/activities/:id'>\n          <ActivityView \n            activity = {currentActivity}\n            currentUser = {currentUser}\n            children = {children}\n            updateChildActivity = {updateChildActivity}\n          />\n        </Route>\n        <Route path='/children/:id'>\n          <ChildView \n            child = {currentChild}\n            childStorytimes = {childStorytimes}\n            childActivities = {childActivities}\n            setCurrentStorytime = {setCurrentStorytime}\n            setCurrentActivity = {setCurrentActivity}\n            storytimes = {storytimes}\n            activities = {activities}\n            onRemovChildStorytime = {handleRemovChildStorytime}\n            onRemoveChildActivity = {handleRemoveChildActivity}\n            onEditedCAComment = {handleEditedCAComment}\n            onEditedCSComment = {handleEditedCSComment}\n          />\n        </Route>\n        <Route exact path='/login'>\n          <Login \n            setCurrentUser = {setCurrentUser}\n          />\n        </Route>\n        <Route exact path='/register'>\n          <Signup\n            setCurrentUser = {setCurrentUser}\n          />\n        </Route>\n      </Switch>\n    </div>   \n  );\n}\n\nexport default App;\n","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Header.js",["87"],"import React from \"react\";\nimport { NavLink, useHistory } from 'react-router-dom';\nimport Search from './Search';\nimport styled from \"styled-components\";\n\nfunction Header({ query, setQuery, setCurrentUser, currentUser }) {\n\n    const history = useHistory()\n\n    function logout() {\n        localStorage.removeItem(\"token\")\n        setCurrentUser(null)\n        history.push(\"/storytimes\")\n    }\n\n    return (\n        <header>\n            <h1>StoryTime</h1>\n            <nav>\n                <NavLink \n                    to=\"/storytimes\"\n                    className=\"button\">\n                    Storytimes\n                </NavLink>\n                <NavLink \n                    to=\"/activities\"\n                    className=\"button\">\n                    Activities\n                </NavLink>\n                <NavLink \n                    to=\"/profile\"\n                    className=\"button\">\n                    Profile\n                </NavLink>\n                { !currentUser ?\n                <NavLink\n                    exact\n                    to=\"/register\"\n                    className=\"button\">\n                    SignUp\n                </NavLink>\n                : null }\n                { !currentUser ?\n                <NavLink\n                    exact\n                    to=\"/login\"\n                    className=\"button\">\n                    Login\n                </NavLink>\n                :\n                <button className=\"button\" onClick={logout}>Logout</button>\n                }\n            </nav>\n            <Search \n                query = {query} \n                setQuery = {setQuery}\n            />\n            <img src =\"/bookshelf.png\" alt=\"books\" />\n        </header>\n    )\n\n}\n\nexport default Header;\n","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeList.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeTile.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Search.js",[],["88","89"],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Categories.js",[],["90","91"],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityList.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityTile.js",["92","93","94"],"import React, { useState } from \"react\";\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction ActivityTile({ activity, setCurrentActivity, childActivity, onRemoveChildActivity, onEditedCAComment, childActivities }) {\n\n    const { id, title, description, link, image, category } = activity\n    const location = useLocation()\n    const [newComment, setNewComment] = useState(\"\")\n    let reg = new RegExp('/storytimes/*')\n\n    function handleClick() {\n        setCurrentActivity(activity)\n    } \n\n    function handleDelete() {\n        fetch(`http://localhost:3000/child_activities/${childActivity.id}`, {\n            method: \"DELETE\"\n        })\n        onRemoveChildActivity(childActivity.id)\n    }\n\n    function handleEdit(e) {\n        e.preventDefault()\n        fetch(`http://localhost:3000/child_activities/${childActivity.id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ comment: newComment })\n        })\n        .then((r) => r.json())\n        .then(editedComment => {\n            onEditedCAComment(editedComment)\n        })\n    }\n\n    return (\n        <li className=\"activity-card\">\n            <div className=\"activity-tile-detail\">\n                <h1>{title}</h1>\n                <h2>Category: {category.category} </h2>\n                <Link to={`/activities/${id}`}>\n                  <button onClick={handleClick} className=\"activity-button\">Details</button>\n                </Link>\n                {(location.pathname === `/activities`) ? \n                null : \n                (reg.test(location.pathname)) ? null :\n                <div>\n                <button onClick={handleDelete} value=\"delete\" className=\"delete-button\">Delete</button>\n                    {childActivity.comment === \"\" ?\n                    <> \n                    <form className=\"activity-comment-form\">\n                        <input\n                            className=\"activity-comment\"\n                            type=\"text\"\n                            name=\"comment\"\n                            placeholder=\"Comment\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                        />\n                    </form>\n                    <button className=\"add-comment\" onClick={handleEdit} value=\"edit\">Add Comment</button></>\n                    :\n                    <p>{childActivity.comment}</p>\n                    }\n                </div>}\n            </div>\n        </li>\n    )\n\n}\n\nexport default ActivityTile;","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Profile.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ChildTile.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/StorytimeView.js",["95"],"import React, { useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\nimport ActivityTile from \"./ActivityTile\"\n\n\nfunction StorytimeView({ storytime, currentUser, updateChildStorytime, children, setCurrentActivity }) {\n    const { id, title, age, genre, time, activities } = storytime\n    const [ child, setChild ] = useState(\"\")\n    const location = useLocation()\n\n    const activityComponents = activities.map((activity) =>\n    <ActivityTile\n        key = {activity.id}\n        activity = {activity}\n        setCurrentActivity = {setCurrentActivity}\n        />\n    )\n\n    const userChildren = children.filter((child) => {\n        return child.user_id === currentUser.id\n     })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        const newChildStorytimeObj = {\n            child_id: parseInt(child),\n            storytime_id: id,\n            comment: \"\"\n        }\n        fetch('http://localhost:3000/child_storytimes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newChildStorytimeObj)\n        })\n        .then(r => r.json())\n        .then(newObj => updateChildStorytime(newObj))\n    }\n\n    return (\n        <div className=\"storytime-list\">\n            <div className=\"storytime-show\">\n                <h1>{title}</h1>\n                <h3>Age: {age}</h3>\n                <h3>Genre: {genre}</h3>\n                <h3>Minimum Time: {time} minutes</h3>\n                <form className=\"add-childstorytime-form\" onSubmit = {handleSubmit}>\n                    <h3>Add Storytime:</h3>\n                    <div className=\"child-div\">\n                        <label htmlFor=\"children\">Choose a Child:</label>\n                        <select \n                            name = \"children\"\n                            value = {child}\n                            onChange = {(e) => setChild(e.target.value)}>\n                            {userChildren.map((child) => { \n                                return <option key={child.id} value={child.id}>{child.name}</option>})}\n                        </select>\n                        <button type=\"submit\">Add Storytime</button>\n                    </div>\n                </form>\n                <h2>Activities:</h2>\n                <ul className=\"activity-card-list\">{activityComponents}</ul>\n            </div>\n        </div>\n    )\n}\n\nexport default StorytimeView","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ActivityView.js",["96","97"],"import React, { useState } from \"react\";\nimport { useLocation } from 'react-router-dom';\n\nfunction ActivityView({ activity, currentUser, children, updateChildActivity }) {\n    const { id, title, description, link, image, category } = activity\n    const [ child, setChild ] = useState(\"\")\n    const location = useLocation()\n\n    const userChildren = children.filter((child) => {\n        return child.user_id === currentUser.id\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        const newChildActivityObj = {\n            child_id: parseInt(child),\n            activity_id: id,\n            comment: \"\"\n        }\n        fetch('http://localhost:3000/child_activities', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newChildActivityObj)\n        })\n        .then(r => r.json())\n        .then(newObj => updateChildActivity(newObj))\n    }\n\n    return (\n        <div className=\"activity-list\">\n            <div className=\"activity-show\">\n                <h1>{title}</h1>\n                <h2>Category: {category.category}</h2>\n                <p>{description}</p>\n                <form className=\"add-childactivity-form\" onSubmit = {handleSubmit}>\n                    <h3>Add Activity:</h3>\n                    <div className=\"child-div\">\n                        <label htmlFor=\"children\">Choose a Child:</label>\n                        <select\n                            name = \"child\"\n                            value = {child}\n                            onChange = {(e) => setChild(e.target.value)}>\n                            {userChildren.map((child) => {\n                                return <option key={child.id} value={child.id}>{child.name}</option>})}\n                        </select>\n                        <button type=\"submit\">Add Activity</button>\n                    </div>\n                </form>\n                <p>Resource:</p>\n                <div\n                    className=\"video\"\n                    style={{\n                        position: \"relative\",\n                        paddingBottom: \"56.25%\",\n                        paddingTop: 25,\n                        height: 0\n                    }}\n                >\n                    <iframe\n                        style={{\n                            position: \"absolute\",\n                            top: 0,\n                            left: 0,\n                            width: \"100%\",\n                            height: \"100%\"\n                        }}\n                        src={link}\n                        frameBorder=\"0\"\n                        title=\"video\"\n                        allowFullScreen\n                    />\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default ActivityView;","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/ChildView.js",["98","99","100","101","102","103","104"],"import React, { Fragment } from \"react\";\nimport ActivityTile from \"./ActivityTile\";\nimport StorytimeTile from './StorytimeTile'\n\nfunction ChildView({ child, childStorytimes, childActivities, setCurrentStorytime, setCurrentActivity, storytimes, activities, onRemovChildStorytime, onRemoveChildActivity, onEditedCAComment, onEditedCSComment, childActivity }) {\n    const { id, name, age  } = child\n    console.log(childStorytimes)\n    console.log(childActivities)\n\n    const storytimeComponents = childStorytimes.map((childStorytime) => {\n    if (childStorytime.child_id === id) {\n        return(\n        <StorytimeTile\n            key = {childStorytime.id}\n            storytime = {storytimes.find((storytime) => \n                storytime.id === childStorytime.storytime_id\n            )}\n            setCurrentStorytime = {setCurrentStorytime}\n            childStorytime = {childStorytime}\n            onRemovChildStorytime = {onRemovChildStorytime}\n            onEditedCSComment = {onEditedCSComment}\n        />\n        )\n    }}\n    )\n\n    const activityComponents = childActivities.map((childActivity) => {\n        if (childActivity.child_id === id) {\n            return(\n                <ActivityTile\n                    key = {childActivity.id}\n                    activity = {activities.find((activity) => \n                        activity.id === childActivity.activity_id    \n                    )}\n                    setCurrentActivity = {setCurrentActivity}\n                    childActivity = {childActivity}\n                    onRemoveChildActivity = {onRemoveChildActivity}\n                    onEditedCAComment = {onEditedCAComment}\n                />\n            )\n        }\n    })\n\n    const activityCommentComponents = childActivities.map((childActivity) => {\n        if (childActivity.child_id === id) {\n            return(\n                <li>{childActivity.comment}</li>\n            )\n        }\n    })\n\n    const storytimeCommentComponents = childStorytimes.map((childStorytime) => {\n        if (childStorytime.child_id === id) {\n            return(\n                <li>{childStorytime.comment}</li>\n            )\n        }\n    })\n    \n    return (\n        <div className=\"child-list\">\n            <div className=\"child-show\">\n                <h1>{name}</h1>\n                <h1>Age: {age}</h1>\n                <h1>Storytimes: </h1>\n                <ul>{storytimeComponents}</ul>\n                <h1>Activities:</h1>\n                <ul>{activityComponents}</ul>\n            </div>\n        </div>\n    )\n\n}\n\nexport default ChildView;","/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Login.js",[],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/LogoutButton.js",[],["105","106"],"/Users/ameliaelton/Flatiron/Mod5/storyTime/storytime-frontend/src/components/Signup.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":12,"column":8,"nodeType":"113","messageId":"114","endLine":12,"endColumn":18},{"ruleId":"111","severity":1,"message":"115","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"107","replacedBy":"118"},{"ruleId":"109","replacedBy":"119"},{"ruleId":"111","severity":1,"message":"120","line":6,"column":24,"nodeType":"113","messageId":"114","endLine":6,"endColumn":35},{"ruleId":"111","severity":1,"message":"121","line":6,"column":37,"nodeType":"113","messageId":"114","endLine":6,"endColumn":41},{"ruleId":"111","severity":1,"message":"122","line":6,"column":43,"nodeType":"113","messageId":"114","endLine":6,"endColumn":48},{"ruleId":"111","severity":1,"message":"123","line":9,"column":11,"nodeType":"113","messageId":"114","endLine":9,"endColumn":19},{"ruleId":"111","severity":1,"message":"122","line":5,"column":43,"nodeType":"113","messageId":"114","endLine":5,"endColumn":48},{"ruleId":"111","severity":1,"message":"123","line":7,"column":11,"nodeType":"113","messageId":"114","endLine":7,"endColumn":19},{"ruleId":"111","severity":1,"message":"124","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"126","line":10,"column":70,"nodeType":"127","messageId":"128","endLine":10,"endColumn":72},{"ruleId":"125","severity":1,"message":"126","line":27,"column":68,"nodeType":"127","messageId":"128","endLine":27,"endColumn":70},{"ruleId":"111","severity":1,"message":"129","line":44,"column":11,"nodeType":"113","messageId":"114","endLine":44,"endColumn":36},{"ruleId":"125","severity":1,"message":"126","line":44,"column":75,"nodeType":"127","messageId":"128","endLine":44,"endColumn":77},{"ruleId":"111","severity":1,"message":"130","line":52,"column":11,"nodeType":"113","messageId":"114","endLine":52,"endColumn":37},{"ruleId":"125","severity":1,"message":"126","line":52,"column":77,"nodeType":"127","messageId":"128","endLine":52,"endColumn":79},{"ruleId":"107","replacedBy":"131"},{"ruleId":"109","replacedBy":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Background' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.",["133"],["134"],["133"],["134"],"'description' is assigned a value but never used.","'link' is assigned a value but never used.","'image' is assigned a value but never used.","'location' is assigned a value but never used.","'Fragment' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'activityCommentComponents' is assigned a value but never used.","'storytimeCommentComponents' is assigned a value but never used.",["133"],["134"],"no-global-assign","no-unsafe-negation"]